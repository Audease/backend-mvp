name: Audease Deployment

on:
  pull_request:
    branches: ['dev']

permissions:
  contents: read
  pull-requests: read

env:
  FORCE_COLOR: 3
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_DB_HOST: localhost
  TEST_DB_USER: ${{ secrets.DATABASE_USERNAME_TEST }}
  TEST_DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD_TEST }}
  TEST_DB_NAME: ${{ secrets.DATABASE_NAME_TEST }}
  TEST_DB_PORT: 5432

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD_TEST }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME_TEST }}
        ports:
        - 5432:5432
        # options: >-
        #   --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5 #magic___^_^___line
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: npm

    - name: Install
      run: yarn install

    # - name: Prepare Database
    #   run: |
    #     yarn run db:migrate
    #     yarn run db:seed

    - name: Run JS test
      run: |
        yarn run test
        yarn run test:e2e
        yarn run test:cov
      env:
        TEST_DB_HOST: localhost
        TEST_DB_USER: ${{ secrets.DATABASE_USERNAME_TEST }}
        TEST_DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD_TEST }}
        TEST_DB_NAME: ${{ secrets.DATABASE_NAME_TEST }}
        TEST_DB_PORT: 5432
        # DB_HOST: ${{ env.TEST_DB_HOST }}
        # DB_USER: ${{ env.TEST_DB_USER }}
        # DB_PASSWORD: ${{ env.TEST_DB_PASSWORD }}
        # DB_NAME: ${{ env.TEST_DB_NAME }}
        # DB_PORT: ${{ env.TEST_DB_PORT }}

    # - name: Teardown Test Database
    #   if: always()
    #   run: |
    #     psql -h ${{ env.TEST_DB_HOST }} -U ${{ env.TEST_DB_USER }} -d postgres -c "DROP DATABASE ${{ env.TEST_DB_NAME }};"
    #   env:
    #     PGPASSWORD: ${{ env.TEST_DB_PASSWORD }}

  push_to_github_registry:
    if: github.ref == 'refs/heads/dev' || github.event.pull_request.base.ref == 'dev'
    needs: ['test']
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
